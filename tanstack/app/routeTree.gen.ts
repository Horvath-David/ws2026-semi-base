/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootLayoutImport } from './routes/_root-layout'
import { Route as RootLayoutIndexImport } from './routes/_root-layout/index'
import { Route as RootLayoutCustomerOrdersIdImport } from './routes/_root-layout/customer-orders/$id'

// Create/Update Routes

const RootLayoutRoute = RootLayoutImport.update({
  id: '/_root-layout',
  getParentRoute: () => rootRoute,
} as any)

const RootLayoutIndexRoute = RootLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RootLayoutRoute,
} as any)

const RootLayoutCustomerOrdersIdRoute = RootLayoutCustomerOrdersIdImport.update(
  {
    id: '/customer-orders/$id',
    path: '/customer-orders/$id',
    getParentRoute: () => RootLayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_root-layout': {
      id: '/_root-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_root-layout/': {
      id: '/_root-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RootLayoutIndexImport
      parentRoute: typeof RootLayoutImport
    }
    '/_root-layout/customer-orders/$id': {
      id: '/_root-layout/customer-orders/$id'
      path: '/customer-orders/$id'
      fullPath: '/customer-orders/$id'
      preLoaderRoute: typeof RootLayoutCustomerOrdersIdImport
      parentRoute: typeof RootLayoutImport
    }
  }
}

// Create and export the route tree

interface RootLayoutRouteChildren {
  RootLayoutIndexRoute: typeof RootLayoutIndexRoute
  RootLayoutCustomerOrdersIdRoute: typeof RootLayoutCustomerOrdersIdRoute
}

const RootLayoutRouteChildren: RootLayoutRouteChildren = {
  RootLayoutIndexRoute: RootLayoutIndexRoute,
  RootLayoutCustomerOrdersIdRoute: RootLayoutCustomerOrdersIdRoute,
}

const RootLayoutRouteWithChildren = RootLayoutRoute._addFileChildren(
  RootLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof RootLayoutRouteWithChildren
  '/': typeof RootLayoutIndexRoute
  '/customer-orders/$id': typeof RootLayoutCustomerOrdersIdRoute
}

export interface FileRoutesByTo {
  '/': typeof RootLayoutIndexRoute
  '/customer-orders/$id': typeof RootLayoutCustomerOrdersIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_root-layout': typeof RootLayoutRouteWithChildren
  '/_root-layout/': typeof RootLayoutIndexRoute
  '/_root-layout/customer-orders/$id': typeof RootLayoutCustomerOrdersIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/customer-orders/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/customer-orders/$id'
  id:
    | '__root__'
    | '/_root-layout'
    | '/_root-layout/'
    | '/_root-layout/customer-orders/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  RootLayoutRoute: typeof RootLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  RootLayoutRoute: RootLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_root-layout"
      ]
    },
    "/_root-layout": {
      "filePath": "_root-layout.tsx",
      "children": [
        "/_root-layout/",
        "/_root-layout/customer-orders/$id"
      ]
    },
    "/_root-layout/": {
      "filePath": "_root-layout/index.tsx",
      "parent": "/_root-layout"
    },
    "/_root-layout/customer-orders/$id": {
      "filePath": "_root-layout/customer-orders/$id.tsx",
      "parent": "/_root-layout"
    }
  }
}
ROUTE_MANIFEST_END */
